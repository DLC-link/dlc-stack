# This is the compose file running as part of the automated GH workflow
version: '3.9'
services:
  postgresdlc:
    container_name: postgresdlc
    image: postgres:12
    hostname: postgresdlc
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeme
      PGDATA: /data/postgres
    ports:
      - '5431:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      static-network:
        ipv4_address: 172.20.128.8

  storageapi:
    container_name: storageapi
    hostname: storageapi
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/storage-api:${IMAGE_TAG}
    environment:
      RUST_LOG: 'debug'
      DATABASE_URL: 'postgresql://postgres:changeme@postgresdlc:5432/postgres'
      MIGRATE: 'true'
    ports:
      - '8100:8100'
    entrypoint: '/app/storage-api'
    depends_on:
      postgresdlc:
        condition: service_healthy
    networks:
      static-network:
        ipv4_address: 172.20.128.1

  dlc-link-attestor-1:
    container_name: attestor-1
    hostname: attestor-1
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-attestor:${IMAGE_TAG}
    volumes:
      - ./attestor-config.yaml:/app/attestor/config.yaml
    ports:
      - 8801:8801
    environment:
      'PORT': '8801'
      'ATTESTOR_XPRIV': 'xprv9s21ZrQH143K3UL4H8EBxF8trNkq3Pfs4ZhpSKe56oX75rJ1b6Jkj2CAcbYkdb2KASLp5LoubpzqF2KwMHUBtGKPj9DfaiZfLByUTtFkwPu'
    restart: on-failure
    depends_on:
      - storageapi
    networks:
      static-network:
        ipv4_address: 172.20.128.5

  dlc-link-attestor-2:
    container_name: attestor-2
    hostname: attestor-2
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-attestor:${IMAGE_TAG}
    volumes:
      - ./attestor-config.yaml:/app/attestor/config.yaml
    ports:
      - 8802:8802
    environment:
      'PORT': '8802'
      'ATTESTOR_XPRIV': 'xprv9s21ZrQH143K3pj61DiUpUHeU4TU2UjBj2L8jutCJxTmggWgx1kmFjWjUGtcNnRhdYc5akWQe7zKm1fVzJcszpZ6r5S1oA44s5q9Q8Gd2P9'
    restart: on-failure
    depends_on:
      - storageapi
    networks:
      static-network:
        ipv4_address: 172.20.128.6

  dlc-link-attestor-3:
    container_name: attestor-3
    hostname: attestor-3
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-attestor:${IMAGE_TAG}
    volumes:
      - ./attestor-config.yaml:/app/attestor/config.yaml
    ports:
      - 8803:8803
    environment:
      'PORT': '8803'
      'ATTESTOR_XPRIV': 'xprv9s21ZrQH143K4CegKvRcNhZXfeSd2siDFE4EcAxm8d1MbofXiQZ6DySTZErHkYztDWyP1VrmUfWjmbMobe2sABM7AdMpuBd3jeRxkZ6MvKj'
    restart: on-failure
    depends_on:
      - storageapi
    networks:
      static-network:
        ipv4_address: 172.20.128.7

  blockchain-interface:
    container_name: blockchain-interface
    hostname: blockchain-interface
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-blockchain-interface:${IMAGE_TAG}
    ports:
      - 3000:3000
      - 3003:3003
    environment:
      - 'PORT=3000'
      - 'TEST_MODE_ENABLED=true'
      - 'ROUTER_WALLET_ADDRESS=http://router-wallet:8085'
      - 'CHAIN=STACKS_MOCKNET'
      - 'VERSION=1'
      - 'API_KEY=abcdef1234567890'
      - 'PRIVATE_KEY=6a1a754ba863d7bab14adbbc3f8ebb090af9e871ace621d3e5ab634e1422885e01'
      - 'MOCKNET_ADDRESS=stx-btc1.dlc.link'
      - 'ATTESTOR_CONFIG=docker'
    depends_on:
      - dlc-link-attestor-1
      - dlc-link-attestor-2
      - dlc-link-attestor-3
    restart: on-failure
    networks:
      static-network:
        ipv4_address: 172.20.128.3

  router-wallet:
    container_name: router-wallet
    hostname: router-wallet
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-protocol-wallet:${IMAGE_TAG}
    ports:
      - 8085:8085
    environment:
      # For Internal DLC.Link Bitcoin Mocknet
      - 'ELECTRUM_API_URL=https://devnet.dlc.link/electrs'
      # For Bitcoin Testnet
      # - "ELECTRUM_API_URL=https://blockstream.info/testnet/api"
      # For Bitcoin Mainnet
      # ELECTRUM_API_URL="https://blockstream.info/api"
      - 'BITCOIN_CHECK_INTERVAL_SECONDS=15'
      - 'BITCOIN_NETWORK=regtest'
      - 'RUST_LOG=warn,dlc_protocol_wallet=debug'
      - 'RUST_BACKTRACE=full'
      - 'STORAGE_API_ENDPOINT=http://storageapi:8100'
      - 'CONTRACT_CLEANUP_ENABLED=false'
      - 'BLOCKCHAIN_INTERFACE_URL=http://blockchain-interface:3000'
      - 'XPRIV=${XPRIV}'
      - 'FINGERPRINT=${FINGERPRINT}'
      - 'WALLET_IP=172.20.128.2'
    depends_on:
      - postgresdlc
      - storageapi
      - blockchain-interface
    restart: on-failure
    networks:
      static-network:
        ipv4_address: 172.20.128.2
    healthcheck:
      test: curl --fail http://router-wallet:8085/info || exit 1
      interval: 3s
      timeout: 10s
      retries: 10
      start_period: 5s

  integration-test:
    profiles:
      - it
    container_name: integration-test
    hostname: integration-test
    image: 903295530547.dkr.ecr.us-east-1.amazonaws.com/dlc-integration-test:${IMAGE_TAG}
    environment:
      - ENV=docker
      - HANDLE_ATTESTORS=true
      - SUCCESSFUL_ATTESTING=true
      - ELECTRUM_API_URL=https://devnet.dlc.link/electrs
    depends_on:
      router-wallet:
        condition: service_healthy
    networks:
      static-network:
        ipv4_address: 172.20.128.9
networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
