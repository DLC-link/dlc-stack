# cargo-features = ["per-package-target"]

[package]
edition = "2021"
name = "dlc-wasm-wallet"
version = "0.4.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
base64 = "0.13.1"
bitcoin = {version = "0.29.2", features=["serde"]}
chrono = {version = "0.4.19", features = ["serde"]}
dlc-link-manager = { path = "../dlc-link-manager" }
dlc-manager = { git = "https://github.com/dlc-link/rust-dlc", rev="e59ed0ce2a7d10ab974b5890f8c0d0fb103c761a", features = ["use-serde"] }
dlc-messages = { git = "https://github.com/dlc-link/rust-dlc", rev="e59ed0ce2a7d10ab974b5890f8c0d0fb103c761a", features = ["use-serde"]}
dlc-trie = { git = "https://github.com/dlc-link/rust-dlc", rev="e59ed0ce2a7d10ab974b5890f8c0d0fb103c761a", features = ["use-serde"]}
# rust-bitcoin-coin-selection = {version = "0.1.0", git = "https://github.com/p2pderivatives/rust-bitcoin-coin-selection", features = ["rand"]}
dlc-memory-storage-provider = { path = "../dlc-memory-storage-provider" }
env_logger = "0.9.0"
getrandom = { version = "0.2", features = ["js"] }
lightning = {version = "0.0.113" }
hex = "0.4"
log = "0.4.17"
reqwest = {version = "0.11.16", default-features = false, features = ["json"] }
serde = {version = "*", features = ["derive"]}
serde_json = "1.0.81"
secp256k1-zkp = {version = "0.7.0", features = ["bitcoin_hashes", "global-context", "rand", "rand-std", "serde"] }
#simple-wallet = { path = "../../../rust-dlc/simple-wallet"}
js-interface-wallet = { path = "../js-interface-wallet" }
sled = "0.34"

# [target.'cfg(target_arch = "wasm32")'.dependencies]
gloo-utils = { version = "0.1", features = ["serde"] }
# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# tokio = {version = "1.23.0", features = ["rt", "rt-multi-thread", "macros"]}
serde-wasm-bindgen = "0.4"
wasm-bindgen-futures = {version="0.4.34"}
wasm-bindgen = { version = "0.2.84", features = ["serde-serialize"] }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
js-sys = "0.3.61"

esplora-async-blockchain-provider = { path = "../esplora-async-blockchain-provider" }

[dev-dependencies]
mockito = "0.31.0"
wasm-bindgen-test = "0.3.13"

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
