version: '3.9'
services:
  dlc-link-attestor-1:
    container_name: attestor-1
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8801:8801
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8801"
      "NODE_ENV": "development"
    env_file:
      - ./attestor/observer/.env
    volumes:
      - ./attestor/observer/src:/app/attestor/observer/src

  dlc-link-attestor-2:
    container_name: attestor-2
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8802:8802
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8802"
      "NODE_ENV": "development"
    env_file:
      - ./attestor/observer/.env
    volumes:
      - ./attestor/observer/src:/app/attestor/observer/src

  dlc-link-attestor-3:
    container_name: attestor-3
    build:
      context: .
      dockerfile: ./attestor/Dockerfile
    ports:
      - 8803:8803
    environment:
      "BRANCH": "attestor-manager"
      "PORT": "8803"
      "NODE_ENV": "development"
    env_file:
      - ./attestor/observer/.env
    volumes:
      - ./attestor/observer/src:/app/attestor/observer/src

  blockchain-interface:
    container_name: blockchain-interface
    hostname: blockchain-interface
    build: ./wallet-blockchain-interface
    volumes:
      - ./wallet-blockchain-interface:/usr/src/app
    ports:
      - 3000:3000
    environment:
      - "PORT=3000"
    depends_on:
      - dlc-link-attestor-1
      - dlc-link-attestor-2
      - dlc-link-attestor-3

  router-wallet:
    container_name: router-wallet
    hostname: router-wallet
    build:
      context: .
      dockerfile: ./wallet/Dockerfile
    volumes:
      - ./wallet:/usr/src/app
    ports:
      - 8085:8085
    environment:
      # For Internal DLC.Link Bitcoin Mocknet
      # ELECTRUM_API_URL="https://dev-oracle.dlc.link/electrs/"
      # For Bitcoin Testnet
      - "ELECTRUM_API_URL=https://blockstream.info/testnet/api/"
      # For Bitcoin Mainnet
      # ELECTRUM_API_URL="https://blockstream.info/api/"
      - "BITCOIN_CHECK_INTERVAL_SECONDS=10"
      - "BITCOIN_NETWORK=testnet"
      - "RUST_LOG=warn,dlc_protocol_wallet=debug"
      - "RUST_BACKTRACE=full"
      - "STORAGE_API_ENABLED=true"
      - "STORAGE_API_ENDPOINT=http://storageapi:8100"
      - "CONTRACT_CLEANUP_ENABLED=false"
      - "BLOCKCHAIN_INTERFACE_URL=http://blockchain-interface:3000"
    depends_on:
        - postgresdlc
        - storageapi
        - blockchain-interface

  storageapi:
    container_name: storageapi
    hostname: storageapi
    image: storage-api:test
    environment:
      RUST_LOG: "debug"
      DATABASE_URL: "postgresql://postgres:changeme@postgresdlc:5432/postgres"
      MIGRATE: "true"
    ports:
      - "8100:8100"
    entrypoint: "/app/storage-api"
    depends_on:
      postgresdlc:
        condition: service_healthy

  postgresdlc:
    container_name: postgresdlc
    image: postgres:12
    hostname: postgresdlc
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeme
      PGDATA: /data/postgres
    ports:
      - "5431:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
